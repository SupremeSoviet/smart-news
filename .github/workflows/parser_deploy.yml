name: Deploy to Yandex Cloud

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_LOGIN }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image to DockerHub
      uses: docker/build-push-action@v2
      with:
        context: ./parser
        file: ./parser/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_LOGIN }}/smart-news:latest

    - name: Login to Yandex Cloud
      id: login-cr
      uses: yc-actions/yc-cr-login@v2
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

    - name: Build and tag Docker image
      run: |
        docker build -t cr.yandex/${{ secrets.YC_CONTAINER_REGISTRY }}/smartnews:latest ./parser

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy Serverless Container
      id: deploy-sls-container
      uses: yc-actions/yc-sls-container-deploy@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
        container-name: ntb-parser
        folder-id: ${{ secrets.YC_FOLDER_ID }}
        revision-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
        revision-cores: 1
        revision-memory: 512Mb
        revision-core-fraction: 100
        revision-concurrency: 1
        revision-image-url: cr.yandex/${{ secrets.YC_CONTAINER_REGISTRY }}/smartnews:latest
        revision-execution-timeout: 15m
        revision-env: |
          CLICKHOUSE_HOST=${{ secrets.CLICKHOUSE_HOST }},
          CLICKHOUSE_USER=${{ secrets.CLICKHOUSE_USER }},
          CLICKHOUSE_PASSWORD=${{ secrets.CLICKHOUSE_PASSWORD }},
          CLICKHOUSE_PORT=${{ secrets.CLICKHOUSE_PORT }},
          CLICKHOUSE_DB_NAME=${{ secrets.CLICKHOUSE_DB_NAME }},
          CLICKHOUSE_TABLE_NAME=${{ secrets.CLICKHOUSE_TABLE_NAME }}
